// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lendings.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Lending struct {
	LendingId            uint32           `protobuf:"varint,1,opt,name=lending_id,json=lendingId,proto3" json:"lending_id,omitempty"`
	BookId               string           `protobuf:"bytes,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	User                 *User            `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	LentAt               *types.Timestamp `protobuf:"bytes,4,opt,name=lent_at,json=lentAt,proto3" json:"lent_at,omitempty"`
	ReturnedAt           *types.Timestamp `protobuf:"bytes,5,opt,name=returned_at,json=returnedAt,proto3" json:"returned_at,omitempty"`
	Returned             bool             `protobuf:"varint,6,opt,name=returned,proto3" json:"returned,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Lending) Reset()         { *m = Lending{} }
func (m *Lending) String() string { return proto.CompactTextString(m) }
func (*Lending) ProtoMessage()    {}
func (*Lending) Descriptor() ([]byte, []int) {
	return fileDescriptor_45071b74f38387d9, []int{0}
}
func (m *Lending) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Lending) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Lending.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Lending) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lending.Merge(m, src)
}
func (m *Lending) XXX_Size() int {
	return m.Size()
}
func (m *Lending) XXX_DiscardUnknown() {
	xxx_messageInfo_Lending.DiscardUnknown(m)
}

var xxx_messageInfo_Lending proto.InternalMessageInfo

func (m *Lending) GetLendingId() uint32 {
	if m != nil {
		return m.LendingId
	}
	return 0
}

func (m *Lending) GetBookId() string {
	if m != nil {
		return m.BookId
	}
	return ""
}

func (m *Lending) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Lending) GetLentAt() *types.Timestamp {
	if m != nil {
		return m.LentAt
	}
	return nil
}

func (m *Lending) GetReturnedAt() *types.Timestamp {
	if m != nil {
		return m.ReturnedAt
	}
	return nil
}

func (m *Lending) GetReturned() bool {
	if m != nil {
		return m.Returned
	}
	return false
}

type ListUserLendingsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserLendingsRequest) Reset()         { *m = ListUserLendingsRequest{} }
func (m *ListUserLendingsRequest) String() string { return proto.CompactTextString(m) }
func (*ListUserLendingsRequest) ProtoMessage()    {}
func (*ListUserLendingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45071b74f38387d9, []int{1}
}
func (m *ListUserLendingsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserLendingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserLendingsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserLendingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserLendingsRequest.Merge(m, src)
}
func (m *ListUserLendingsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListUserLendingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserLendingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserLendingsRequest proto.InternalMessageInfo

type ListLendingsResponse struct {
	Lendings             []*Lending `protobuf:"bytes,1,rep,name=lendings,proto3" json:"lendings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListLendingsResponse) Reset()         { *m = ListLendingsResponse{} }
func (m *ListLendingsResponse) String() string { return proto.CompactTextString(m) }
func (*ListLendingsResponse) ProtoMessage()    {}
func (*ListLendingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_45071b74f38387d9, []int{2}
}
func (m *ListLendingsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListLendingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListLendingsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListLendingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLendingsResponse.Merge(m, src)
}
func (m *ListLendingsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListLendingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLendingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLendingsResponse proto.InternalMessageInfo

func (m *ListLendingsResponse) GetLendings() []*Lending {
	if m != nil {
		return m.Lendings
	}
	return nil
}

type GetLendingRequest struct {
	LendingId            string   `protobuf:"bytes,1,opt,name=lending_id,json=lendingId,proto3" json:"lending_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLendingRequest) Reset()         { *m = GetLendingRequest{} }
func (m *GetLendingRequest) String() string { return proto.CompactTextString(m) }
func (*GetLendingRequest) ProtoMessage()    {}
func (*GetLendingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45071b74f38387d9, []int{3}
}
func (m *GetLendingRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetLendingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetLendingRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetLendingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLendingRequest.Merge(m, src)
}
func (m *GetLendingRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetLendingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLendingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLendingRequest proto.InternalMessageInfo

func (m *GetLendingRequest) GetLendingId() string {
	if m != nil {
		return m.LendingId
	}
	return ""
}

type BorrowBookRequest struct {
	Lending              *Lending `protobuf:"bytes,1,opt,name=lending,proto3" json:"lending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BorrowBookRequest) Reset()         { *m = BorrowBookRequest{} }
func (m *BorrowBookRequest) String() string { return proto.CompactTextString(m) }
func (*BorrowBookRequest) ProtoMessage()    {}
func (*BorrowBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45071b74f38387d9, []int{4}
}
func (m *BorrowBookRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BorrowBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BorrowBookRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BorrowBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BorrowBookRequest.Merge(m, src)
}
func (m *BorrowBookRequest) XXX_Size() int {
	return m.Size()
}
func (m *BorrowBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BorrowBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BorrowBookRequest proto.InternalMessageInfo

func (m *BorrowBookRequest) GetLending() *Lending {
	if m != nil {
		return m.Lending
	}
	return nil
}

type ReturnBookRequest struct {
	LendingId            uint32   `protobuf:"varint,1,opt,name=lending_id,json=lendingId,proto3" json:"lending_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnBookRequest) Reset()         { *m = ReturnBookRequest{} }
func (m *ReturnBookRequest) String() string { return proto.CompactTextString(m) }
func (*ReturnBookRequest) ProtoMessage()    {}
func (*ReturnBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_45071b74f38387d9, []int{5}
}
func (m *ReturnBookRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnBookRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnBookRequest.Merge(m, src)
}
func (m *ReturnBookRequest) XXX_Size() int {
	return m.Size()
}
func (m *ReturnBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnBookRequest proto.InternalMessageInfo

func (m *ReturnBookRequest) GetLendingId() uint32 {
	if m != nil {
		return m.LendingId
	}
	return 0
}

func init() {
	proto.RegisterType((*Lending)(nil), "ProgrammingLab.toshokan.Lending")
	proto.RegisterType((*ListUserLendingsRequest)(nil), "ProgrammingLab.toshokan.ListUserLendingsRequest")
	proto.RegisterType((*ListLendingsResponse)(nil), "ProgrammingLab.toshokan.ListLendingsResponse")
	proto.RegisterType((*GetLendingRequest)(nil), "ProgrammingLab.toshokan.GetLendingRequest")
	proto.RegisterType((*BorrowBookRequest)(nil), "ProgrammingLab.toshokan.BorrowBookRequest")
	proto.RegisterType((*ReturnBookRequest)(nil), "ProgrammingLab.toshokan.ReturnBookRequest")
}

func init() { proto.RegisterFile("lendings.proto", fileDescriptor_45071b74f38387d9) }

var fileDescriptor_45071b74f38387d9 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x6e, 0x13, 0x3f,
	0x10, 0xc7, 0xe5, 0x34, 0xbf, 0xfc, 0x99, 0xe8, 0x17, 0xb5, 0x56, 0xd5, 0x6c, 0xb7, 0x34, 0x2c,
	0x2b, 0x0e, 0x51, 0x24, 0x76, 0x21, 0xbd, 0x05, 0x2e, 0xcd, 0x05, 0x55, 0x8a, 0x04, 0x5a, 0xca,
	0x85, 0x4b, 0xb4, 0x21, 0x26, 0xac, 0x92, 0xd8, 0x8b, 0xed, 0x80, 0xa0, 0xca, 0xa5, 0x07, 0x2e,
	0x1c, 0x79, 0x03, 0x9e, 0x86, 0x23, 0x12, 0x2f, 0x80, 0x22, 0x1e, 0x04, 0xd9, 0xb1, 0x93, 0x2a,
	0xe9, 0xa6, 0xb9, 0xed, 0xec, 0xcc, 0x77, 0xe6, 0xeb, 0xcf, 0xd8, 0x50, 0x1d, 0x13, 0x3a, 0x48,
	0xe8, 0x50, 0x04, 0x29, 0x67, 0x92, 0xe1, 0xda, 0x4b, 0xce, 0x86, 0x3c, 0x9e, 0x4c, 0x12, 0x3a,
	0xec, 0xc6, 0xfd, 0x40, 0x32, 0xf1, 0x9e, 0x8d, 0x62, 0xea, 0xde, 0x1b, 0x32, 0x36, 0x1c, 0x93,
	0x30, 0x4e, 0x93, 0x30, 0xa6, 0x94, 0xc9, 0x58, 0x26, 0x8c, 0x1a, 0x99, 0x7b, 0x62, 0xb2, 0x3a,
	0xea, 0x4f, 0xdf, 0x85, 0x64, 0x92, 0xca, 0xcf, 0x26, 0x79, 0x7f, 0x3d, 0x29, 0x93, 0x09, 0x11,
	0x32, 0x9e, 0xa4, 0xa6, 0x00, 0xa6, 0x82, 0xf0, 0xc5, 0xb7, 0x7f, 0x9d, 0x83, 0x62, 0x77, 0xe1,
	0x09, 0x9f, 0x02, 0x18, 0x7b, 0xbd, 0x64, 0xe0, 0x20, 0x0f, 0x35, 0xfe, 0x8f, 0xca, 0xe6, 0xcf,
	0xc5, 0x00, 0xd7, 0xa0, 0xd8, 0x67, 0x6c, 0xa4, 0x72, 0x39, 0x0f, 0x35, 0xca, 0x51, 0x41, 0x85,
	0x17, 0x03, 0xfc, 0x04, 0xf2, 0xaa, 0xa3, 0xb3, 0xe7, 0xa1, 0x46, 0xa5, 0x75, 0x1a, 0x64, 0x9c,
	0x29, 0x78, 0x2d, 0x08, 0x8f, 0x74, 0x29, 0x3e, 0x83, 0xe2, 0x98, 0x50, 0xd9, 0x8b, 0xa5, 0x93,
	0xd7, 0x2a, 0x37, 0x58, 0xb8, 0x0e, 0xac, 0xeb, 0xe0, 0xd2, 0xba, 0x8e, 0x0a, 0xaa, 0xf4, 0x5c,
	0xe2, 0xa7, 0x50, 0xe1, 0x44, 0x4e, 0x39, 0x25, 0x03, 0x25, 0xfc, 0xef, 0x4e, 0x21, 0xd8, 0xf2,
	0x73, 0x89, 0x5d, 0x28, 0xd9, 0xc8, 0x29, 0x78, 0xa8, 0x51, 0x8a, 0x96, 0xb1, 0x7f, 0x0c, 0xb5,
	0x6e, 0x22, 0xa4, 0xf2, 0x67, 0x58, 0x88, 0x88, 0x7c, 0x98, 0x12, 0x21, 0xfd, 0x4b, 0x38, 0x54,
	0xa9, 0xd5, 0x6f, 0x91, 0x32, 0x2a, 0x08, 0x7e, 0x06, 0x25, 0xbb, 0x4a, 0x07, 0x79, 0x7b, 0x8d,
	0x4a, 0xcb, 0xcb, 0x3c, 0xb7, 0x11, 0x47, 0x4b, 0x85, 0xdf, 0x82, 0x83, 0xe7, 0xc4, 0x36, 0x35,
	0xa3, 0x6e, 0xc1, 0x5f, 0xbe, 0x81, 0xdf, 0x7f, 0x01, 0x07, 0x1d, 0xc6, 0x39, 0xfb, 0xd4, 0x61,
	0x6c, 0x64, 0x35, 0x6d, 0xcd, 0x51, 0x55, 0x68, 0xc1, 0x2e, 0x2e, 0xac, 0x40, 0x99, 0x88, 0x34,
	0x81, 0x9b, 0x0d, 0xb7, 0xdf, 0x81, 0xd6, 0x8f, 0x3c, 0x54, 0x4d, 0xa3, 0x57, 0x84, 0x7f, 0x4c,
	0xde, 0x12, 0xfc, 0x0d, 0xc1, 0xfe, 0x3a, 0x3d, 0xfc, 0x38, 0xdb, 0xc6, 0xed, 0xa0, 0xdd, 0x47,
	0x5b, 0x15, 0xeb, 0xfc, 0xfd, 0xa3, 0xeb, 0xdf, 0x7f, 0xbf, 0xe7, 0xf6, 0x71, 0x35, 0x54, 0xf7,
	0x29, 0xb4, 0x64, 0xf1, 0x17, 0x80, 0x15, 0x59, 0xdc, 0xcc, 0x6c, 0xba, 0x81, 0xdf, 0xbd, 0x93,
	0x9c, 0x5f, 0xd7, 0x33, 0x1d, 0x7c, 0xb4, 0x1c, 0x17, 0x5e, 0xad, 0x60, 0xcd, 0xf0, 0x57, 0x04,
	0xb0, 0x5a, 0xd1, 0x96, 0xe1, 0x1b, 0x7b, 0xdc, 0x61, 0x78, 0x53, 0x0f, 0x7f, 0xe8, 0x1f, 0x87,
	0xea, 0xd5, 0x89, 0xf0, 0xca, 0xbc, 0xc5, 0xd9, 0xd2, 0x4c, 0xdb, 0x6e, 0x16, 0xcf, 0x00, 0x56,
	0x9b, 0xdd, 0xe2, 0x63, 0x63, 0xfd, 0x3b, 0xf8, 0x78, 0xa0, 0x7d, 0x9c, 0xb4, 0x32, 0x20, 0xb4,
	0x51, 0xb3, 0x73, 0xf8, 0x73, 0x5e, 0x47, 0xbf, 0xe6, 0x75, 0xf4, 0x67, 0x5e, 0x47, 0x6f, 0x0a,
	0x71, 0x9a, 0xf4, 0xd2, 0x7e, 0xbf, 0xa0, 0x1f, 0xe8, 0xd9, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x28, 0x48, 0x64, 0xd5, 0x03, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LendingServiceClient is the client API for LendingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LendingServiceClient interface {
	ListUserLendings(ctx context.Context, in *ListUserLendingsRequest, opts ...grpc.CallOption) (*ListLendingsResponse, error)
	GetLending(ctx context.Context, in *GetLendingRequest, opts ...grpc.CallOption) (*Lending, error)
	BorrowBook(ctx context.Context, in *BorrowBookRequest, opts ...grpc.CallOption) (*Lending, error)
	ReturnBook(ctx context.Context, in *ReturnBookRequest, opts ...grpc.CallOption) (*Lending, error)
}

type lendingServiceClient struct {
	cc *grpc.ClientConn
}

func NewLendingServiceClient(cc *grpc.ClientConn) LendingServiceClient {
	return &lendingServiceClient{cc}
}

func (c *lendingServiceClient) ListUserLendings(ctx context.Context, in *ListUserLendingsRequest, opts ...grpc.CallOption) (*ListLendingsResponse, error) {
	out := new(ListLendingsResponse)
	err := c.cc.Invoke(ctx, "/ProgrammingLab.toshokan.LendingService/ListUserLendings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lendingServiceClient) GetLending(ctx context.Context, in *GetLendingRequest, opts ...grpc.CallOption) (*Lending, error) {
	out := new(Lending)
	err := c.cc.Invoke(ctx, "/ProgrammingLab.toshokan.LendingService/GetLending", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lendingServiceClient) BorrowBook(ctx context.Context, in *BorrowBookRequest, opts ...grpc.CallOption) (*Lending, error) {
	out := new(Lending)
	err := c.cc.Invoke(ctx, "/ProgrammingLab.toshokan.LendingService/BorrowBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lendingServiceClient) ReturnBook(ctx context.Context, in *ReturnBookRequest, opts ...grpc.CallOption) (*Lending, error) {
	out := new(Lending)
	err := c.cc.Invoke(ctx, "/ProgrammingLab.toshokan.LendingService/ReturnBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LendingServiceServer is the server API for LendingService service.
type LendingServiceServer interface {
	ListUserLendings(context.Context, *ListUserLendingsRequest) (*ListLendingsResponse, error)
	GetLending(context.Context, *GetLendingRequest) (*Lending, error)
	BorrowBook(context.Context, *BorrowBookRequest) (*Lending, error)
	ReturnBook(context.Context, *ReturnBookRequest) (*Lending, error)
}

func RegisterLendingServiceServer(s *grpc.Server, srv LendingServiceServer) {
	s.RegisterService(&_LendingService_serviceDesc, srv)
}

func _LendingService_ListUserLendings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserLendingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LendingServiceServer).ListUserLendings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProgrammingLab.toshokan.LendingService/ListUserLendings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LendingServiceServer).ListUserLendings(ctx, req.(*ListUserLendingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LendingService_GetLending_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLendingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LendingServiceServer).GetLending(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProgrammingLab.toshokan.LendingService/GetLending",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LendingServiceServer).GetLending(ctx, req.(*GetLendingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LendingService_BorrowBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BorrowBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LendingServiceServer).BorrowBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProgrammingLab.toshokan.LendingService/BorrowBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LendingServiceServer).BorrowBook(ctx, req.(*BorrowBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LendingService_ReturnBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReturnBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LendingServiceServer).ReturnBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProgrammingLab.toshokan.LendingService/ReturnBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LendingServiceServer).ReturnBook(ctx, req.(*ReturnBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LendingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ProgrammingLab.toshokan.LendingService",
	HandlerType: (*LendingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUserLendings",
			Handler:    _LendingService_ListUserLendings_Handler,
		},
		{
			MethodName: "GetLending",
			Handler:    _LendingService_GetLending_Handler,
		},
		{
			MethodName: "BorrowBook",
			Handler:    _LendingService_BorrowBook_Handler,
		},
		{
			MethodName: "ReturnBook",
			Handler:    _LendingService_ReturnBook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lendings.proto",
}

func (m *Lending) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Lending) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LendingId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintLendings(dAtA, i, uint64(m.LendingId))
	}
	if len(m.BookId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintLendings(dAtA, i, uint64(len(m.BookId)))
		i += copy(dAtA[i:], m.BookId)
	}
	if m.User != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintLendings(dAtA, i, uint64(m.User.Size()))
		n1, err := m.User.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.LentAt != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintLendings(dAtA, i, uint64(m.LentAt.Size()))
		n2, err := m.LentAt.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.ReturnedAt != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintLendings(dAtA, i, uint64(m.ReturnedAt.Size()))
		n3, err := m.ReturnedAt.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.Returned {
		dAtA[i] = 0x30
		i++
		if m.Returned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListUserLendingsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserLendingsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListLendingsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListLendingsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Lendings) > 0 {
		for _, msg := range m.Lendings {
			dAtA[i] = 0xa
			i++
			i = encodeVarintLendings(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetLendingRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetLendingRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.LendingId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintLendings(dAtA, i, uint64(len(m.LendingId)))
		i += copy(dAtA[i:], m.LendingId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *BorrowBookRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BorrowBookRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Lending != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintLendings(dAtA, i, uint64(m.Lending.Size()))
		n4, err := m.Lending.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ReturnBookRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnBookRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LendingId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintLendings(dAtA, i, uint64(m.LendingId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintLendings(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Lending) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LendingId != 0 {
		n += 1 + sovLendings(uint64(m.LendingId))
	}
	l = len(m.BookId)
	if l > 0 {
		n += 1 + l + sovLendings(uint64(l))
	}
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovLendings(uint64(l))
	}
	if m.LentAt != nil {
		l = m.LentAt.Size()
		n += 1 + l + sovLendings(uint64(l))
	}
	if m.ReturnedAt != nil {
		l = m.ReturnedAt.Size()
		n += 1 + l + sovLendings(uint64(l))
	}
	if m.Returned {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserLendingsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListLendingsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Lendings) > 0 {
		for _, e := range m.Lendings {
			l = e.Size()
			n += 1 + l + sovLendings(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetLendingRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LendingId)
	if l > 0 {
		n += 1 + l + sovLendings(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BorrowBookRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lending != nil {
		l = m.Lending.Size()
		n += 1 + l + sovLendings(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnBookRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LendingId != 0 {
		n += 1 + sovLendings(uint64(m.LendingId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovLendings(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozLendings(x uint64) (n int) {
	return sovLendings(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Lending) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLendings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Lending: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Lending: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LendingId", wireType)
			}
			m.LendingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LendingId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BookId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLendings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLendings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BookId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLendings
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLendings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &User{}
			}
			if err := m.User.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LentAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLendings
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLendings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LentAt == nil {
				m.LentAt = &types.Timestamp{}
			}
			if err := m.LentAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReturnedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLendings
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLendings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReturnedAt == nil {
				m.ReturnedAt = &types.Timestamp{}
			}
			if err := m.ReturnedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Returned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Returned = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipLendings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserLendingsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLendings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserLendingsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserLendingsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipLendings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListLendingsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLendings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListLendingsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListLendingsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lendings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLendings
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLendings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lendings = append(m.Lendings, &Lending{})
			if err := m.Lendings[len(m.Lendings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLendings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetLendingRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLendings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetLendingRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetLendingRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LendingId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLendings
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLendings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LendingId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLendings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BorrowBookRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLendings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BorrowBookRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BorrowBookRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lending", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLendings
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLendings
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Lending == nil {
				m.Lending = &Lending{}
			}
			if err := m.Lending.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLendings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnBookRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLendings
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnBookRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnBookRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LendingId", wireType)
			}
			m.LendingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LendingId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLendings(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLendings
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLendings(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLendings
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLendings
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLendings
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthLendings
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowLendings
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipLendings(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthLendings
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthLendings = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLendings   = fmt.Errorf("proto: integer overflow")
)
